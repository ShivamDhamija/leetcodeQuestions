/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* mergeTrees(TreeNode* r1, TreeNode* r2) {
        if(!r1&&!r2)return NULL;
        TreeNode *ne=new TreeNode();
        if(r1&&!r2)
        {
            ne->val=r1->val;
            ne->left=mergeTrees(r1->left,NULL);
            ne->right=mergeTrees(r1->right,NULL);
        }
        else if(r2&&!r1)
        {
            ne->val=r2->val;
            ne->left=mergeTrees(NULL,r2->left);
            ne->right=mergeTrees(NULL,r2->right);
        }
        else
        {
            ne->val=r1->val+r2->val;
            ne->left=mergeTrees(r1->left,r2->left);
            ne->right=mergeTrees(r1->right,r2->right);   
        }
        return ne;
    }
};
