/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int step;
    int helper(TreeNode *root)
    {
        if(root==NULL)return 0;
        
        int left_need_or_excess=helper(root->left);
        int right_need_or_excess=helper(root->right);
        
        step+=abs(left_need_or_excess)+abs(right_need_or_excess);
        
        int my_need=1;
        int rest_of_coins=(left_need_or_excess+right_need_or_excess+root->val)-my_need;
        
        return rest_of_coins;
        
    }
    int distributeCoins(TreeNode* root) {
       
        step=0;
        helper(root);
        return step;
    }
};
