/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
set<int>v;
    void call(TreeNode *r)
    {
        if(!r)return ;
        v.insert(r->val);
        call(r->right);
        call(r->left);
    }
int findSecondMinimumValue(TreeNode* r)
{
    call(r);
    if(v.size()<2)return -1;
    auto i=v.begin();
   // cout<<*i;
    i++;
    return *i;
}
};
